// Sample linker command file for the PIC18F452 processor
// when used **with** the MPLAB ICD3
// $Id: 18f452i.lkr,v 1.2 2002/07/29 19:09:08 sealep Exp $


// Search for Libraries in the current directory.

// NOTE: The linker is broken in this release so that it does not
// correctly search the library include path(s) defined in MPLAB.
// The work-around is to add the installation library file search path
// explicitly. The quotes are needed because of the space character in
// the path.

LIBPATH  ".;C:\Program Files\Microchip\mcc18\lib"


// Link with startup and library files
//     c018i.o  is the C startup code
//     clib.lib is the C standard library
//     p18f452.lib is the target-specific library.

FILES c018i.o
FILES clib.lib
FILES p18f4520.lib


// CODEPAGE defined memory regions are in Program Memory, and are used for 
// program code, constants (including constant strings), and the initial values
// of initialised variables.

CODEPAGE    NAME=vectors    START=0x000000   END=0x000029   PROTECTED
CODEPAGE    NAME=page       START=0x00002A   END=0x007DBF
CODEPAGE    NAME=debug      START=0x007DC0   END=0X007FFF   PROTECTED
CODEPAGE    NAME=idlocs     START=0x200000   END=0x200007   PROTECTED
CODEPAGE    NAME=config     START=0x300000   END=0x30000D   PROTECTED
CODEPAGE    NAME=devid      START=0x3FFFFE   END=0x3FFFFF   PROTECTED
CODEPAGE    NAME=eedata     START=0xF00000   END=0xF000FF   PROTECTED


// ACCESSBANK defined memory regions in Access RAM, used for data (variables).
// DATABANK defined memory regions in Banked RAM, used for data (variables).
// The names gpr0, grp1, etc here are **arbitrary**.

ACCESSBANK  NAME=accessram  START=0x000      END=0x07F
DATABANK    NAME=gpr0       START=0x080      END=0x0FF
DATABANK    NAME=STORAGE    START=0x100      END=0x4FF
DATABANK    NAME=gpr5       START=0x500      END=0x5F3
DATABANK    NAME=dbgspr     START=0x5F4      END=0x5FF      PROTECTED
ACCESSBANK  NAME=accesssfr  START=0xF80      END=0xFFF      PROTECTED

// Logical sections specify which of the memory regions defined above should
// be used for a portion of relocatable code generated from a named section in 
// the source code. Each SECTION places a named section into a defined memory
// region. Code sections are named using (for example) a 
//   #pragma code sectionName  directive in a C source file.

SECTION    NAME=UserCode   ROM=page
SECTION    NAME=Storage RAM=STORAGE

// Define software stack size and location

STACK SIZE=0x0F4 RAM=gpr5
